create_artifact_glass_candle_effect = {
	# Get the character the artifact is being made for.
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	save_scope_value_as = {
		name = candle_color
		value = flag:$COLOR$
	}

	# Create the artifact
	create_artifact = {
		name = artifact_glass_candle
		description = artifact_glass_candle_desc
		template = glass_candle_artifact_template
		type = glass_candle
		visuals = glass_candle
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = discovered
			actor = scope:giver
			recipient = scope:owner
			location = province:6620
		}
		modifier = glass_candle_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	
	hidden_effect_new_object = {
		scope:newly_created_artifact = {
			hidden_effect = {
				get_random_artifact_modifier_misc_low_effect = yes
			}
			
			set_artifact_feature_group = glass_candle_color
			set_artifact_description = agot_artifact_glass_candle_desc
			set_variable = { name = historical_unique_artifact value = yes }
			set_variable = {
				name = glass_candle
				value = yes
			}

			save_scope_as = epic

			if = {
				limit = {
					global_var:magic_level = 2
				}
				reforge_artifact = {
					type = glass_candle
					description = agot_artifact_glass_candle_desc
					modifier = glass_candle_modifier_higher
					generate_history = no
				}
			}
		}
	}
}

get_random_glass_candle_artifact = {
	$OWNER$ = { save_scope_as = owner }
	$GIVER$ = { save_scope_as = giver }
	random_list = {
		1 = {
			create_artifact_glass_candle_effect = { 
				COLOR = white
			}
		}
		1 = {
			create_artifact_glass_candle_effect = {
				COLOR = purple
			}
		}
		1 = {
			create_artifact_glass_candle_effect = {
				COLOR = red
			}
		}
		1 = {
			create_artifact_glass_candle_effect = {
				COLOR = black	
			}
		}
		1 = {
			create_artifact_glass_candle_effect = {
				COLOR = blue	
			}
		}
		1 = {
			create_artifact_glass_candle_effect = {
				COLOR = green
			}
		}
	}
}