namespace = agot_valyrian_steel

# Head of Dayne dynasty bestows Dawn on someone
agot_valyrian_steel.0001 = {
	type = character_event
	title = agot_valyrian_steel.0001.t
	desc = agot_valyrian_steel.0001.desc
	theme = faith

	left_portrait = {
		character = root
		animation = personality_honorable
	}

	right_portrait = {
		character = scope:my_relation
		animation = personality_honorable
	}

	trigger = {
		any_character_artifact = {
			has_artifact_modifier = vs_dawn_modifier
		}
		NOT = { has_character_flag = is_sword_of_morning }
		scope:my_relation = { save_temporary_scope_as = potential_sword_of_morning }
		scope:potential_sword_of_morning = {
			worthy_sword_of_the_morning_trigger = yes
		}
	}

	# Grant them Dawn
	option = {
		name = agot_valyrian_steel.0001.a

		dynasty = {
			add_dynasty_prestige = 500
		}

		scope:my_relation = {
			trigger_event = agot_valyrian_steel.0002
		}

		ai_chance = {
			base = 100
		}
	}

	# Deny them the sword
	option = {
		name = agot_valyrian_steel.0001.b

		ai_chance = {
			base = 0
		}
	}
}

#Knight recieves Dawn
agot_valyrian_steel.0002 = {
	type = character_event
	title = agot_valyrian_steel.0002.t
	desc = agot_valyrian_steel.0002.desc
	theme = faith

	left_portrait = {
		character = root
		animation = personality_honorable
	}

	right_portrait = {
		character = scope:my_relation
		animation = personality_honorable
	}

	immediate = {
		scope:actor ?= { save_scope_as = my_relation }
	}

	#Accept
	option = {
		name = agot_valyrian_steel.0002.a

		if = {
			limit = { worthy_sword_of_the_morning_trigger = yes }

			give_nickname = nick_the_sword_of_the_morning

			add_character_flag = is_sword_of_morning

			add_prestige = massive_prestige_value
			add_prestige_level = 1
		}

		dynasty:dynn_Dayne.dynast = {
			random_character_artifact = {
				limit  = { has_artifact_modifier = vs_dawn_modifier }
				save_scope_as = dawn
			}
		}

		scope:dawn = {
			set_owner = root
		}

		hidden_effect = {
			add_character_flag = claimed_dawn
			scope:dawn = {
				equip_artifact_to_owner_replace = yes
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = 100
				worthy_sword_of_the_morning_trigger = yes
			}
			modifier = {
				add = 50
				has_trait = arrogant
			}
			modifier = {
				add = 50
				has_trait = greedy
			}
			modifier = {
				add = 25
				has_trait = ambitious
			}
		}
	}

	#Refuse
	option = {
		name = agot_valyrian_steel.0002.b

		hidden_effect = {
			save_scope_as = refused_sword
			dynasty:dynn_Dayne.dynast = {
				send_interface_toast = {
					title = dawn_refused_title
					custom_tooltip = dawn_refused_desc
					left_icon = root
				}
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = 25
				worthy_sword_of_the_morning_trigger = no
			}
			modifier = {
				add = 50
				worthy_sword_of_the_morning_trigger = no
				has_trait = humble
			}
			modifier = {
				add = 50
				worthy_sword_of_the_morning_trigger = no
				has_trait = craven
			}
			modifier = {
				add = 50
				worthy_sword_of_the_morning_trigger = no
				has_trait = content
			}
			modifier = {
				add = 50
				worthy_sword_of_the_morning_trigger = no
				has_trait = honest
			}
			modifier = {
				add = 50
				worthy_sword_of_the_morning_trigger = no
				has_trait = just
			}
		}
	}
}

#Return Dawn to dynast on death
agot_valyrian_steel.0003 = {
	hidden = yes

	trigger = {
		dynasty = dynasty:dynn_Dayne
		any_character_artifact = {
			has_artifact_modifier = vs_dawn_modifier
		}
	}

	immediate = {
		random_character_artifact = {
			limit  = { has_artifact_modifier = vs_dawn_modifier }
			save_scope_as = dawn
		}
		scope:dawn = {
			set_owner = dynasty:dynn_Dayne.dynast
		}

		save_scope_as = dead_relative
		dynasty:dynn_Dayne.dynast = {
			trigger_event = {
				id = agot_valyrian_steel.0004
				days = 30
			}
		}
	}
}

#Grant Dawn to new eligible holder after death
agot_valyrian_steel.0004 = {
	type = character_event
	title = agot_valyrian_steel.0004.t
	desc = agot_valyrian_steel.0004.desc
	theme = faith

	left_portrait = {
		character = root
		animation = personality_honorable
	}

	right_portrait = {
		character = scope:my_relation
		animation = personality_honorable
	}

	lower_center_portrait  = {
		character = scope:dead_relative
	}

	trigger = {
		any_character_artifact = {
			has_artifact_modifier = vs_dawn_modifier
		}
		NOT = { has_character_flag = is_sword_of_morning }

		dynasty:dynn_Dayne = {
			any_dynasty_member = {
				worthy_sword_of_the_morning_trigger = yes
			}
		}
	}

	immediate = {
		dynasty:dynn_Dayne = {
			random_dynasty_member = {
				limit = {
					worthy_sword_of_the_morning_trigger = yes
				}
				save_scope_as = my_relation
			}
		}
	}

	# Grant them Dawn
	option = {
		name = agot_valyrian_steel.0001.a

		dynasty = {
			add_dynasty_prestige = 500
		}

		scope:my_relation = {
			trigger_event = agot_valyrian_steel.0002
		}

		ai_chance = {
			base = 100
		}
	}

	# Deny them the sword
	option = {
		name = agot_valyrian_steel.0001.b

		ai_chance = {
			base = 0
		}
	}
}

#Valyrian Steel holder died in battle, slayer decides whether to keep the sword or not
agot_valyrian_steel.1000 = {
	type = character_event
	title = agot_valyrian_steel.1000.t
	desc = agot_valyrian_steel.1000.desc
	theme = battle

	left_portrait = {
		character = root
		animation = personality_bold
	}
	right_portrait = {
		character = scope:artifact_knight
		animation = personality_bold
	}
	artifact = {
		trigger = { exists = scope:looted_vs_sword }
		target = scope:looted_vs_sword
		position = lower_center_portrait
	}

	immediate = {
		#Check if fallen knight has a House and save it
		if = {
			limit = { exists = scope:artifact_knight.house }
			scope:artifact_knight.house = { save_scope_as = artifact_house }
		}
	}

	option = { # Claim the weapon as your own
		name = agot_valyrian_steel.1000.a
		flavor = agot_valyrian_steel.1000.a.tt
		save_scope_as = vs_artifact_thief
		dynasty ?= { add_dynasty_prestige = medium_dynasty_prestige_value }
		scope:artifact_knight.house.house_head ?= {
			add_opinion = {
				target = root
				modifier = hate_opinion
				opinion = -30
			}
			trigger_event = {
				id = agot_valyrian_steel.1011
				days = 3
			}
		}
		scope:artifact_house ?= {
			if = {
				limit = {
					scope:looted_vs_sword = {
						NOT = {
							any_artifact_house_claimant = {
								this = scope:artifact_house
							}
						}
					}
				}
				add_house_artifact_claim = scope:looted_vs_sword
			}
		}

		stress_impact = {
			just = major_stress_impact_gain
			compassionate = major_stress_impact_gain
			craven = medium_stress_impact_gain
			forgiving = medium_stress_impact_gain
		}

		ai_chance = {
			base = 0
			ai_value_modifier = {
				ai_greed = 2
				ai_boldness = 1.5
				ai_energy = 0.5
			}
		}
	}

	option = { # Return the weapon to the House Head
		trigger = { exists = scope:artifact_knight.house.house_head } # There must be a House Head to give the VS Sword back to
		name = agot_valyrian_steel.1000.b
		custom_tooltip = agot_valyrian_steel.1000.b.tt
		scope:looted_vs_sword = {
			set_owner = {
				target = scope:artifact_knight.house.house_head
				history = {
					type = ransomed
					actor = root
					recipient = scope:artifact_knight.house.house_head
				}
			}
		}
		scope:artifact_knight.house.house_head = {
			show_as_tooltip = {
				add_opinion = {
					opinion = 20
					modifier = grateful_opinion
					target = root
				}
			}
			trigger_event = {
				id = agot_valyrian_steel.1010
				days = 1
			}
		}

		stress_impact = {
			greedy = medium_stress_impact_gain
			ambitious = medium_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_honor = 2
				ai_compassion = 2
				ai_sociability = 1
			}
		}
	}
}

#Valyrian Sword inheritance following capture in battle/being taken captive
agot_valyrian_steel.1001 = {
	type = character_event
	title = agot_valyrian_steel.1001.t
	desc = agot_valyrian_steel.1001.desc
	theme = battle

	left_portrait = {
		character = scope:combat_winner
		animation = war_over_win
	}
	right_portrait = {
		character = scope:artifact_knight
		animation = sadness
	}
	artifact = { # To display the artifact in the event-window
		trigger = { exists = scope:looted_vs_sword }
		target = scope:looted_vs_sword
		position = lower_center_portrait
	}

	immediate = {
		if = {
			limit = { exists = scope:artifact_knight.house }
			scope:artifact_knight.house = { save_scope_as = artifact_house }
		}
	}

	option = { # Claim VSS from prisoner as trophy
		name = agot_valyrian_steel.1001.a
		flavor = agot_valyrian_steel.1000.a.tt
		save_scope_as = vs_artifact_thief
		add_prestige_level = -1
		add_prestige = massive_prestige_loss
		if = {
			limit = {
				exists = scope:artifact_house
				scope:looted_vs_sword = {
					NOT = {
						any_artifact_house_claimant = {
							this = scope:artifact_house
						}
					}
				}
			}
			scope:artifact_house = { add_house_artifact_claim = scope:looted_vs_sword }
		}
		scope:looted_vs_sword = {
			set_owner = {
				target = root
				history = {
					type = stolen
					actor = scope:artifact_knight
					recipient = root
					location = scope:artifact_knight.location
				}
			}
		}
		scope:artifact_knight.house.house_head ?= {
			trigger_event = {
				id = agot_valyrian_steel.1011
				days = 3
			}
		}

		stress_impact = {
			just = major_stress_impact_gain
			compassionate = major_stress_impact_gain
			craven = major_stress_impact_gain
			forgiving = major_stress_impact_gain
		}

		ai_chance = {
			base = 0
			ai_value_modifier = {
				ai_greed = 2
				ai_boldness = 1.5
				ai_energy = 0.5
				ai_rationality = -0.25
			}
			#Must be very dishonorable to consider at all
			modifier = {
				factor = 0
				ai_honor >= very_high_negative_ai_value
			}
		}
	}

	option = { # Let the captured knight keep their sword
		name = agot_valyrian_steel.1001.b
		scope:artifact_knight = {
			add_opinion = {
				target = root
				opinion = 20
				modifier = grateful_opinion
			}
		}

		stress_impact = {
			greedy = medium_stress_impact_gain
			ambitious = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 2
				ai_sociability = 1
			}
		}
	}
}

#Letter event - House Head is informed about Valyrian Steel Sword being returned
agot_valyrian_steel.1010 = {
	type = letter_event
	opening = agot_valyrian_steel.1010.t
	desc = agot_valyrian_steel.1010.desc
	sender = scope:enemy_knight

	immediate = {
		show_as_tooltip = {
			scope:looted_vs_sword = {
				set_owner = {
					target = root
				}
			}
		}
	}
	option = {
		name = agot_valyrian_steel.1010.a
		add_opinion = {
			opinion = 20
			modifier = grateful_opinion
			target = scope:enemy_knight
		}

		ai_chance = {
			base = 100
		}
	}
}

#Valyrian Steel Sword has been taken in battle, how to respond?
agot_valyrian_steel.1011 = {
	type = character_event
	title = agot_valyrian_steel.1011.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:artifact_knight = { is_in_list = slain_combatants } }
				desc = agot_valyrian_steel.1011.desc.slain
			}
			triggered_desc = {
				trigger = {
					scope:artifact_knight.house.house_head = {
						NOT = { this = scope:artifact_knight }
					}
				}
				desc = agot_valyrian_steel.1011.desc.house_head
			}
			desc = agot_valyrian_steel.1011.desc.prisoner
		}
	}
	theme = rival_relation

	left_portrait = {
		character = root
		animation = sadness
	}
	right_portrait = {
		character = scope:vs_artifact_thief
		animation = personality_bold
	}
	lower_left_portrait = {
		trigger = {
			scope:artifact_knight = { is_in_list = slain_combatants}
		}
		character = scope:artifact_knight
	}
	artifact = {
		trigger = { exists = scope:looted_vs_sword }
		target = scope:looted_vs_sword
		position = lower_right_portrait
	}
	override_background = {
		trigger = { is_imprisoned = yes}
		reference = dungeon
	}
	override_background = {
		trigger = { is_imprisoned = no}
		reference = throne_room
	}

	immediate = {
		save_scope_as = expected_vs_artifact_holder
		add_legitimacy_effect = { LEGITIMACY = medium_legitimacy_loss }
		show_as_tooltip = {
			scope:artifact_house = {
				add_house_artifact_claim = scope:looted_vs_sword
			}
		}
	}

	option = { # Start House Feud and attempt to steal artifact back
		name = agot_valyrian_steel.1011.feud
		trigger = {
			#DLC Check
			has_bp1_dlc_trigger = yes
			house_head_can_start_feud_against_trigger = { TARGET = scope:vs_artifact_thief }
		}
		house_feud_start_effect = {
			# Feuding House Head
			ACTOR = root
			# Target House Head
			TARGET = scope:vs_artifact_thief
			# Feud Reason
			REASON = head_rivalry
			# House Member attacker if relevant
			ATTACKER = root
			# House Member victim if relevant
			VICTIM = root
		}
		if = {
			limit = {
				scope:vs_artifact_thief = {
					NOT = { this = scope:vs_artifact_thief.house.house_head }
				}
			}
			add_opinion = {
				target = scope:vs_artifact_thief
				modifier = hate_opinion
				opinion = -25
			}
		}
		if = {
			limit = {
				can_start_scheme = {
					type = steal_back_artifact
					target_character = scope:vs_artifact_thief
				}
			}
			start_scheme = {
				type = steal_back_artifact
				target_character = scope:vs_artifact_thief
				artifact = scope:looted_vs_sword
			}
			custom_tooltip = agot_valyrian_steel.1011.feud.tt
			hidden_effect = {
				random_scheme = {
					limit = {
						scheme_type = steal_back_artifact
						scheme_target_character = scope:vs_artifact_thief
					}
					add_scheme_modifier = {
						type = extra_success_chance_modifier
					}
				}
			}
		}
		scope:vs_artifact_thief = {
			trigger_event = agot_valyrian_steel.1012
		}

		stress_impact = {
			forgiving = major_stress_impact_gain
			craven = major_stress_impact_gain
			sadistic = medium_stress_impact_loss
			vengeful = medium_stress_impact_loss
		}

		ai_chance = {
			base = 0
			ai_value_modifier = {
				ai_vengefulness = 2
				ai_boldness = 2
				ai_energy = 1
			}
			#AI will not consider unless very vengeful
			modifier = {
				factor = 0
				ai_vengefulness <= very_high_positive_ai_value
			}
		}
	}

	option = { # Start scheme to steal VSS back
		name = agot_valyrian_steel.1011.a
		trigger = {
			can_start_scheme = {
				type = steal_back_artifact
				target_character = scope:vs_artifact_thief
			}
		}
		start_scheme = {
			type = steal_back_artifact
			target_character = scope:vs_artifact_thief
			artifact = scope:looted_vs_sword
		}

		stress_impact = {
			forgiving = medium_stress_impact_gain
			craven = minor_stress_impact_gain
			vengeful = medium_stress_impact_loss
		}

		ai_chance = {
			#Should be default option unless low boldness/energy
			base = 100
			ai_value_modifier = {
				ai_boldness = 1
				ai_energy = 0.5
			}
			modifier = {
				add = 50
				ai_vengefulness >= 0
			}
		}
	}

	option = { # I will have my sword back... eventually...
		name = agot_valyrian_steel.1011.c
		trigger = {
			can_set_relation_rival_trigger = { CHARACTER = scope:vs_artifact_thief }
		}
		house = {
			every_house_member = {
				limit = { NOT = { this = scope:expected_vs_artifact_holder } }
				custom = agot_valyrian_steel.1011.tt.house_opinion_loss
				add_opinion = {
					opinion = -10
					target = scope:expected_vs_artifact_holder
					modifier = angry_opinion
				}
			}
		}
		add_prestige = major_prestige_loss
		if = {
			limit = {
				can_set_relation_rival_trigger = { CHARACTER = scope:vs_artifact_thief }
			}
			set_relation_rival = {
				target = scope:vs_artifact_thief
				reason = rival_stole_prized_heirloom
			}
		}

		stress_impact = {
			greedy = medium_stress_impact_gain
			ambitious = medium_stress_impact_gain
			brave = medium_stress_impact_gain
			craven = minor_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = -0.75
				ai_energy = -0.5
			}
			modifier = {
				add = 50
				ai_vengefulness >= 0
			}
		}
	}

	option = { #Let it go
		name = agot_valyrian_steel.1011.b
		house = {
			every_house_member = {
				limit = { NOT = { this = scope:expected_vs_artifact_holder } }
				custom = agot_valyrian_steel.1011.tt.house_opinion_loss
				add_opinion = {
					opinion = -20
					target = scope:expected_vs_artifact_holder
					modifier = angry_opinion
				}
			}
		}
		add_prestige = massive_prestige_loss

		stress_impact = {
			greedy = major_stress_impact_gain
			ambitious = major_stress_impact_gain
			wrathful = medium_stress_impact_gain
			brave = medium_stress_impact_gain
			stubborn = minor_stress_impact_gain
			craven = minor_stress_impact_loss
			forgiving = medium_stress_impact_loss
		}

		ai_chance = {
			#Should really not do that unless no other options
			base = 0
			ai_value_modifier = {
				ai_boldness = -1.5
				ai_energy = -0.75
			}
		}
	}
}

#Letter event - VS artifact thief is informed of response
agot_valyrian_steel.1012 = {
	type = letter_event
	opening = agot_valyrian_steel.1012.t
	desc = agot_valyrian_steel.1012.desc
	sender = scope:expected_vs_artifact_holder

	option = {
		name = agot_valyrian_steel.1012.a
	}
}

# Parent that dies after begining reconstruction passes flag to heir
agot_valyrian_steel.2000 = {
	type = character_event
	title = agot_valyrian_steel.2000.t
	desc = agot_valyrian_steel.2000.desc

	theme = crown

	override_background = {
		reference = market_west
	}

	trigger = {
		dynasty = dynasty:dynn_Royce
		is_at_war = no
		location = { #Anywhere in Kings Landing
			OR = {
				this = title:b_the_red_keep.title_province
				this = title:b_hookmarket.title_province
				this = title:b_visenyas_hill.title_province
				this = title:b_goldguard_heights.title_province
				this = title:b_rhaenyss_hill.title_province
			}
		}
		#Not fire if Lamentation exists
		NOT = { has_character_flag = search_for_lamentation }
		NOT = {
			any_artifact = {
				has_artifact_modifier = vs_lamentation_modifier
			}
		}
	}

	left_portrait = {
		character= root
		animation = personality_cynical
	}

	immediate = {
		add_character_flag = search_for_lamentation

		character:Royce_82 = {
			save_scope_as = ancestor
		}

		root.location = {
			save_scope_as = location
		}
	}

	option = {
		name = agot_valyrian_steel.2000.a
		custom_tooltip = agot_valyrian_steel.2000.a.tt

		trigger_event = {
			id = agot_valyrian_steel.2001
			days = { 3 6 }
		}
	}

	option = {
		name = agot_valyrian_steel.2000.b

		add_stress = major_stress_loss
		add_piety = medium_piety_gain
	}
}

agot_valyrian_steel.2001 = { #Search begins in the dragonpit
	type = character_event
	title = agot_valyrian_steel.2001.t
	desc = agot_valyrian_steel.2001.desc

	theme = crown

	override_background = {
		reference = dungeon #Dragon Pit Esque?
	}

	left_portrait = {
		character = root
		animation = personality_cynical
	}

	right_portrait = {
		character= character:Royce_82  #William Royce
		animation = agot_lamentation_2
	}

	immediate = {
		if = {
			limit = {
				primary_title.tier = tier_empire
				employs_court_position = maester_court_position
			}
			random_court_position_holder ={
				type = maester_court_position
				save_scope_as = maester
			}
		}
		else_if = {
			limit =  {
				title:c_kings_landing.holder = {
					employs_court_position = maester_court_position
				}
			}
			title:c_kings_landing.holder = {
				random_court_position_holder = {
					limit = { has_court_position = maester_court_position }
					save_scope_as = maester
				}
			}
		}

		character:Royce_82 = {
			save_scope_as = ancestor
		}

		if = {
			limit = {
				NOT = {
					exists = global_var:lamentation_location
				}
			}
			random_list = {
				33 = {
					set_global_variable = { #Lamentation is in the dragonpit
						name = lamentation_location
						value = flag:ruins
					}
				}
				33 = {
					set_global_variable = { #Lamentation is on Dragonstone
						name = lamentation_location
						value = flag:dragonstone
					}
				}
				33 = {
					set_global_variable = { #Lamentation is held by house Wheaton
						name = lamentation_location
						value = flag:wheaton
					}
				}
			}
		}
	}

	option = { #Search Rubble
		name = agot_valyrian_steel.2001.a
		custom_tooltip = agot_valyrian_steel.2001.a.tt

		remove_short_term_gold = massive_gold_value

		hidden_effect = {
			random_list = {
				90 = { #Find Nothing
					trigger_event = {
						id = agot_valyrian_steel.2002
						days = { 1 2 } #140 365 }
					}
				}
				10 = { #Find the Sword :O
					trigger = { global_var:lamentation_location = flag:ruins }
					trigger_event = {
						id = agot_valyrian_steel.2003
						days = { 1 2 } #140 365 }
					}
				}
				#1 = { agot_valyrian_steel.2004 } #Find a draggy egg
			}
		}

		#super unlikely find the sword or a dragon egg, most likely nothing and stress
	}

	# option = { # Consult the GrandMaester
	# 	name = agot_valyrian_steel.2001.b
	# 	custom_tooltip = agot_valyrian_steel.2001.b.tt

	# 	trigger = {
	# 		title:c_kings_landing.holder = {
	# 			employs_court_position = maester_court_position
	# 		}
	# 	}

	# 	trigger_event = {
	# 		id = agot_valyrian_steel.2005
	# 		days = { 1 2 } # 30 - 60 days
	# 	}
	# }

	# option = { #Ask a local - Warrick Wheaton Wheaton_7
	# 	name = agot_valyrian_steel.2001.c
	# 	if = {
	# 		limit = {
	# 			global_var:lamentation_location = flag:wheaton

	# 		}
	# 		add_gold = 1000
	# 	}
	# 	else_if = {
	# 		limit = {
	# 			global_var:lamentation_location = flag:ruins

	# 		}
	# 		add_gold = 100
	# 	}
	# 	else_if = {
	# 		limit = {
	# 			global_var:lamentation_location = flag:dragonstone

	# 		}
	# 		add_gold = 10
	# 	}
	# }

	option = {
		name = agot_valyrian_steel.2001.d
	}

	after = {
		if = {
			limit = {
				global_var:lamentation_location = flag:wheaton
				dynasty:dynn_Wheaton.dynast = {
					is_ai = no
				}
			}
			dynasty:dynn_Wheaton.dynast = {
				agot_create_artifact_vs_lamentation_effect = { OWNER = this }
			}
		}
	}
}

agot_valyrian_steel.2002 = { # Find Nothing
	type = character_event
	title = agot_valyrian_steel.2002.t
	desc = agot_valyrian_steel.2002.desc

	theme = crown

	override_background = {
		reference = dungeon #Dragon Pit Esque?
	}

	left_portrait = {
		character = root
		animation = stress
	}

	right_portrait = {
		character= character:Royce_82  #William Royce
		animation = agot_lamentation_2
	}

	immediate = {
		add_stress = medium_stress_gain
		add_prestige = medium_prestige_loss
	}

	option = { #It HAS to be here!
		name = agot_valyrian_steel.2002.a
		custom_tooltip = agot_valyrian_steel.2002.a.tt


		trigger = {	global_var:lamentation_location = flag:ruins }

		remove_short_term_gold = massive_gold_value
		add_prestige = medium_prestige_loss

		hidden_effect = {
			random_list = {
				50 = { #Find Nothing
					trigger_event = {
						id = agot_valyrian_steel.2004
						days = { 1 2 } #140 365 }
					}
				}
				50 = { #Find the Sword :O
					trigger = { global_var:lamentation_location = flag:ruins }
					trigger_event = {
						id = agot_valyrian_steel.2003
						days = { 1 2 } #140 365 }
					}
					modifier = {
						add = 10
						prestige_level >= 1
					}
					modifier = {
						add = 10
						prestige_level >= 2
					}
					modifier = {
						add = 10
						prestige_level >= 3
					}
					modifier = {
						add = 10
						prestige_level >= 4
					}
					modifier = {
						add = 10
						prestige_level >= 5
					}
					modifier = {
						add = 10
						prestige_level >= 6
					}
				}
				#1 = { agot_valyrian_steel.2004 } #Find a draggy egg
			}
		}
	}

	# option = { #Ask the grand maester
	# 	name = agot_valyrian_steel.2002.b
	# 	custom_tooltip = agot_valyrian_steel.2001.b.tt

	# 	trigger = {
	# 		title:c_kings_landing.holder = {
	# 			employs_court_position = maester_court_position
	# 		}
	# 	}

	# 	trigger_event = {
	# 		id = agot_valyrian_steel.2005
	# 		days = { 1 2 } # 30 - 60 days
	# 	}

	# }


	# option = { #Ask a local
	# 	name = agot_valyrian_steel.2002.c
	# 	custom_tooltip = agot_valyrian_steel.2002.c.tt
	# }

	option = { #Go Back
		name = agot_valyrian_steel.2002.d
	}
}

agot_valyrian_steel.2003 = { # Lamentation found in the Dragon Pit!
	type = character_event
	title = agot_valyrian_steel.2003.t
	desc = agot_valyrian_steel.2003.desc

	theme = crown

	override_background = {
		reference = dungeon #Dragon Pit Esque?
	}

	left_portrait = {
		character = root
		animation = agot_lamentation_2
	}

	right_portrait = {
		character= character:Royce_82  #William Royce
		animation = personality_content
	}

	option = { #We found it!
		name = agot_valyrian_steel.2003.a

		agot_create_artifact_vs_lamentation_effect = { OWNER = root }

		add_prestige = massive_prestige_gain

		dynasty = {
			add_dynasty_prestige = massive_dynasty_prestige_value
		}
	}
}

agot_valyrian_steel.2004 = { # No sword, maybe it is not to be!
	type = character_event
	title = agot_valyrian_steel.2004.t
	desc = agot_valyrian_steel.2004.desc

	theme = crown

	override_background = {
		reference = dungeon #Dragon Pit Esque?
	}

	left_portrait = {
		character = root
		animation = grief
	}

	right_portrait = {
		character= character:Royce_82  #William Royce
		animation = agot_lamentation_2
	}

	option = { #no sword for you
		name = agot_valyrian_steel.2004.a
		custom_tooltip = agot_valyrian_steel.2004.a.tt
	}
}

agot_valyrian_steel.2005 = { # Consult Grand Maester
	type = character_event
	title = agot_valyrian_steel.2005.t
	desc = agot_valyrian_steel.2005.desc

	orphan = yes

	theme = crown

	override_background = {
		reference = physicians_study
	}

	left_portrait = {
		character = root
		animation = personality_honorable
	}

	right_portrait = {
		character = scope:maester
		animation = personality_cynical
	}

	immediate = {
		title:c_kings_landing.holder = {
			random_court_position_holder = {
				limit = { has_court_position = maester_court_position }
				save_scope_as = maester
			}
		}
	}

	option = { #I'll charter a ship to Dragonstone
		name = agot_valyrian_steel.2005.a
		custom_tooltip = agot_valyrian_steel.2005.a.tt

		remove_short_term_gold = major_gold_value #expensive ship

		trigger_event = {
			id = agot_valyrian_steel.2006
			days = { 1 2 } # 30 - 60 days
		}
	}

	option = { #Ask around
		name = agot_valyrian_steel.2005.b
	}
}

agot_valyrian_steel.2006 = { #Hosted by the Lord of Dragonstone
	type = character_event
	title = agot_valyrian_steel.2006.t
	desc = agot_valyrian_steel.2006.desc

	theme = crown
	override_background = { reference = throne_room }

	left_portrait = {
		character = root
		animation = personality_content
	}

	right_portrait = {
		character = scope:host
		animation = personality_forgiving
	}

	immediate = {
		title:c_dragonstone.holder = {
			save_scope_as = host
		}
	}

	option = { #Climb the mountain sides
		name = agot_valyrian_steel.2006.a

		trigger_event = {
			id = agot_valyrian_steel.2007
			days = { 5 10 }
		}
	}

	option = { #Consult the lord of Dragonstone
		#dangerous
		name = agot_valyrian_steel.2006.b
	}
}

agot_valyrian_steel.2007 = { #Exploring Dragonstone - Should be more dangerous if Dragons live here
	type = character_event
	title = agot_valyrian_steel.2007.t
	desc = agot_valyrian_steel.2007.desc

	theme = crown
	override_background = { reference = wilderness_mountains }

	left_portrait = {
		character = root
		animation = personality_bold
	}

	option = { #We push through the Gorge
		name = agot_valyrian_steel.2007.a

		duel = {
			skill = prowess
			value = average_skill_rating
			45 = { #success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1.5
					min = -49
				}
				desc = agot_valyrian_steel.2007.a.success
				add_prestige = medium_prestige_gain

				trigger_event = agot_valyrian_steel.2008
			}
			45 = { #failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -0.5
					min = -49
				}
				desc = agot_valyrian_steel.2007.a.fail
				add_trait = wounded_2

				trigger_event = agot_valyrian_steel.2008
			}
			10 = { #failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -0.5
					min = -49
				}
				death = {
					death_reason = death_accident
				}
			}
		}
	}

	option = { #Turn back
		name = agot_valyrian_steel.2007.b

		add_prestige = minor_prestige_loss
	}
}

agot_valyrian_steel.2008 = { #Looking in the Dragon Poop
	type = character_event
	title = agot_valyrian_steel.2007.t
	desc = agot_valyrian_steel.2007.desc

	theme = crown
	override_background = { reference = wilderness_mountains }

	left_portrait = {
		character = root
		animation = personality_bold
	}


	option = {
		random_list = {
			50 = { #No sword - Later add Dragon Eggs/Bones
				trigger_event = {
					id = agot_valyrian_steel.2009
					days = { 1 2 } #140 365 }
				}
			}
			50 = {
				trigger = { global_var:lamentation_location = flag:dragonstone }
				add_gold = 100

				trigger_event = {
					id = agot_valyrian_steel.2010
					days = { 1 2 } #140 365 }
				}
				modifier = {
					add = 10
					prestige_level >= 1
				}
				modifier = {
					add = 10
					prestige_level >= 2
				}
				modifier = {
					add = 10
					prestige_level >= 3
				}
				modifier = {
					add = 10
					prestige_level >= 4
				}
				modifier = {
					add = 10
					prestige_level >= 5
				}
				modifier = {
					add = 10
					prestige_level >= 6
				}
			}
		}
	}
}

agot_valyrian_steel.2009 = { #Looking in the Dragon Poop
	type = character_event
	title = agot_valyrian_steel.2009.t
	desc = agot_valyrian_steel.2009.desc

	theme = crown
	override_background = { reference = wilderness_mountains }

	immediate = {
		add_stress = medium_stress_gain
		add_prestige = medium_prestige_loss
	}

	left_portrait = {
		character = root
		animation = stress
	}

	option = {
		name = agot_valyrian_steel.2009.a
	}
}

agot_valyrian_steel.2010 = { #Find the swordo
	type = character_event
	title = agot_valyrian_steel.2010.t
	desc = agot_valyrian_steel.2010.desc

	theme = crown
	override_background = { reference = wilderness_mountains }

	left_portrait = {
		character = root
		animation = agot_lamentation_2
	}


	option = {
		name = agot_valyrian_steel.2010.a

		agot_create_artifact_vs_lamentation_effect = { OWNER = root }

		add_prestige = massive_prestige_gain

		dynasty = {
			add_dynasty_prestige =  massive_dynasty_prestige_value
		}
	}
}

#Reforging
agot_valyrian_steel.8000 = {
	type = character_event
	title = agot_valyrian_steel.8000.t
	desc = agot_valyrian_steel.8000.desc
	theme = war

	left_portrait = {
		character = root
		animation = thinking
	}

	right_portrait = {
		character = scope:court_smith
		animation = personality_greedy
	}

	override_background = { reference = armory }

	widget = {
		is_shown = {
			is_ai = no
		}
		gui = "event_window_artifact_selection"
		container = "custom_widgets_container"
	}

	immediate = {
		random_court_position_holder = {
			type = court_smith_court_position
			save_scope_as = court_smith
		}
		every_character_artifact = {
			limit = {
				has_variable = valyrian_steel
				NOT = { has_artifact_modifier = vs_dawn_modifier }
			}
			root = {
				add_to_variable_list = {
					name = possible_artifacts
					target = prev
				}
				if = {
					limit = {
						NOT = { has_variable = selected_artifact }
					}
					set_variable = { name = selected_artifact value = prev }
				}
			}
		}
	}

	#This one
	option = {
		name = agot_valyrian_steel.8000.a
		custom_tooltip = agot_valyrian_steel.8000.a.tt
		var:selected_artifact = { save_scope_as = sacrifice }
		remove_variable = selected_artifact
		clear_variable_list = possible_artifacts
		trigger_event = agot_valyrian_steel.8001
	}

	#Nevermind
	option = {
		name = agot_valyrian_steel.8000.b
		remove_variable = selected_artifact
		clear_variable_list = possible_artifacts
	}
}

agot_valyrian_steel.8001 = {
	type = character_event
	title = agot_valyrian_steel.8001.t
	desc = agot_valyrian_steel.8001.desc
	theme = war

	left_portrait = {
		character = root
		animation = thinking
	}

	right_portrait = {
		character = scope:court_smith
		animation = aggressive_hammer
	}

	override_background = { reference = armory }

	widgets = {
		widget = {
			gui = "event_window_artifact_selection"
			container = "custom_widgets_container"
		}
		widget = {
			gui = "event_window_widget_enter_text_artifact"
			container = "dynamic_birth_name"
			controller = {
				type = text
				data = {
					key = new_artifact_name
					default = {
						localization_key = sword_name_old_pokey
					}
				}
			}
			setup_scope = {
				root = { save_scope_as = text_target }
			}
		}
	}

	immediate = {
		random_court_position_holder = {
			type = court_smith_court_position
			save_scope_as = court_smith
		}
		hidden_effect = {
			title:c_ruins.holder = {
				agot_create_artifact_vs_black_death_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
					set_variable = { name = selected_artifact value = scope:newly_created_artifact }
				}
				agot_create_artifact_vs_mothers_grief_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_talon_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_widows_wail_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_glory_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_stormy_nights_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_strangers_touch_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_dragonbane_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_andal_armingsword_gold_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_andal_armingsword_silver_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_andal_longsword_gold_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_andal_longsword_silver_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_firstman_armingsword_gold_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_firstman_armingsword_silver_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_firstman_armingsword_bronze_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_firstman_longsword_gold_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_firstman_longsword_silver_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_firstman_longsword_bronze_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_valyrian_armingsword_gold_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_valyrian_armingsword_silver_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_valyrian_longsword_gold_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				agot_create_artifact_vs_valyrian_longsword_silver_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				##SUBMOD - VALYRIAN STEEL
				create_artifact_vs_sword_1_basic_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				##SUBMOD - VALYRIAN STEEL
				create_artifact_vs_sword_2_basic_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				##SUBMOD - VALYRIAN STEEL
				create_artifact_vs_sword_3_basic_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				##SUBMOD - VALYRIAN STEEL
				create_artifact_vs_sword_4_basic_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}

				##SUBMOD - VALYRIAN STEEL
				create_artifact_vs_sword_5_basic_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}

				##SUBMOD - VALYRIAN STEEL
				create_artifact_vs_dagger_1_basic_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				##SUBMOD - VALYRIAN STEEL
				create_artifact_vs_spear_1_basic_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
				##SUBMOD - VALYRIAN STEEL
				create_artifact_vs_mace_basic_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}

				##SUBMOD - VALYRIAN STEEL
				create_artifact_vs_mace_2_basic_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}

				##SUBMOD - VALYRIAN STEEL
				create_artifact_vs_halberd_basic_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}

				##SUBMOD - VALYRIAN STEEL
				create_artifact_vs_axe_basic_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}

				create_artifact_vs_goblet_basic_effect = { OWNER = this }
				root = {
					add_to_variable_list = {
						name = possible_artifacts
						target = scope:newly_created_artifact
					}
				}
			}
		}
	}

	#This one
	option = {
		name = agot_valyrian_steel.8001.a

		if = {
			limit = {
				NOT = {
					scope:sacrifice = { has_variable = valyrian_steel_generic }
				}
			}
		add_prestige_level = -1
		add_prestige = massive_prestige_loss
		}
		remove_short_term_gold = 1000

		if = {
			limit = {
				var:selected_artifact = { has_artifact_modifier = vs_black_death_modifier }
			}
			agot_create_artifact_vs_black_death_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_artifact_modifier = vs_mothers_grief_modifier }
			}
			agot_create_artifact_vs_mothers_grief_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_artifact_modifier = vs_talon_modifier }
			}
			agot_create_artifact_vs_talon_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_artifact_modifier = vs_glory_modifier }
			}
			agot_create_artifact_vs_glory_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_artifact_modifier = vs_stormy_nights_modifier }
			}
			agot_create_artifact_vs_stormy_nights_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_artifact_modifier = vs_strangers_touch_modifier }
			}
			agot_create_artifact_vs_strangers_touch_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_artifact_modifier = vs_dragonbane_modifier }
			}
			agot_create_artifact_vs_dragonbane_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = andal_armingsword_gold_artifact }
			}
			agot_create_artifact_vs_andal_armingsword_gold_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = andal_armingsword_silver_artifact }
			}
			agot_create_artifact_vs_andal_armingsword_silver_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = andal_longsword_gold_artifact }
			}
			agot_create_artifact_vs_andal_longsword_gold_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = andal_longsword_silver_artifact }
			}
			agot_create_artifact_vs_andal_longsword_silver_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = firstman_armingsword_gold_artifact }
			}
			agot_create_artifact_vs_firstman_armingsword_gold_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = firstman_armingsword_silver_artifact }
			}
			agot_create_artifact_vs_firstman_armingsword_silver_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = firstman_armingsword_bronze_artifact }
			}
			agot_create_artifact_vs_firstman_armingsword_bronze_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = firstman_longsword_gold_artifact }
			}
			agot_create_artifact_vs_firstman_longsword_gold_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = firstman_longsword_silver_artifact }
			}
			agot_create_artifact_vs_firstman_longsword_silver_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = firstman_longsword_bronze_artifact }
			}
			agot_create_artifact_vs_firstman_longsword_bronze_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = valyrian_armingsword_gold_artifact }
			}
			agot_create_artifact_vs_valyrian_armingsword_gold_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = valyrian_armingsword_silver_artifact }
			}
			agot_create_artifact_vs_valyrian_armingsword_silver_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = valyrian_longsword_gold_artifact }
			}
			agot_create_artifact_vs_valyrian_longsword_gold_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = valyrian_longsword_silver_artifact }
			}
			agot_create_artifact_vs_valyrian_longsword_silver_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = widows_wail_artifact }
			}
			agot_create_artifact_vs_widows_wail_effect = { OWNER = this }
		}
		##SWORDS
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = vs_sword_1 }
			}
			create_artifact_vs_sword_1_basic_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = vs_sword_2 }
			}
			create_artifact_vs_sword_2_basic_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = vs_sword_3 }
			}
			create_artifact_vs_sword_3_basic_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = vs_sword_4 }
			}
			create_artifact_vs_sword_4_basic_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = vs_sword_5 }
			}
			create_artifact_vs_sword_5_basic_effect = { OWNER = this }
		}
		##DAGGER
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = vs_dagger_1 }
			}
			create_artifact_vs_dagger_1_basic_effect = { OWNER = this }
		}
		#SPEAR
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = vs_spear_1 }
			}
			create_artifact_vs_spear_1_basic_effect = { OWNER = this }
		}
		#HALBERD
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = vs_halberd }
			}
			create_artifact_vs_halberd_basic_effect = { OWNER = this }
		}
		#MACE
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = vs_mace }
			}
			create_artifact_vs_mace_basic_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = vs_mace_2 }
			}
			create_artifact_vs_mace_2_basic_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = vs_axe }
			}
			create_artifact_vs_axe_basic_effect = { OWNER = this }
		}
		else_if = {
			limit = {
				var:selected_artifact = { has_variable = vs_goblet }
			}
			create_artifact_vs_goblet_basic_effect = { OWNER = this }
		}
		#something broke
		else = {
			agot_create_artifact_forged_sword_effect = { OWNER = this }
		}

		scope:sacrifice = {
			every_artifact_claimant = {
				limit = {
					NOT = { dynasty ?= root.dynasty }
				}
				add_opinion = {
					modifier = angry_opinion
					target = root
					opinion = -40
				}
			}
			destroy_artifact = this
		}

		if = {
			limit = { has_variable = new_artifact_name }
			scope:newly_created_artifact = {
				set_artifact_name = rename_artifact_default_key
			}
		}
		else = {
			scope:newly_created_artifact = {
				set_artifact_name = rename_artifact_entered_text
			}
		}
	}

	#Nevermind
	option = {
		name = agot_valyrian_steel.8001.b
	}

	after = {
		remove_variable = selected_artifact
		clear_variable_list = possible_artifacts
		if = {
			limit = { has_variable = new_artifact_name }
			remove_variable = new_artifact_name
		}

		hidden_effect = {
			title:c_ruins.holder = {
				every_character_artifact = {
					destroy_artifact = this
				}
			}
		}
	}
}

#Show me the Steel
agot_valyrian_steel.9999 = {
	type = character_event
	title = agot_valyrian_steel.9999.t
	desc = agot_valyrian_steel.9999.desc
	theme = faith

	left_portrait = {
		character = scope:advisor
		animation = throne_room_writer
	}

	widget = {
		is_shown = {
			is_ai = no
		}
		gui = "event_window_valyrian_steel_selection"
		container = "custom_widgets_container"
	}

	immediate = { #Doing it layered like this orders the characters nicely
		if = {
			limit = {
				employs_court_position = maester_court_position
			}
			random_court_position_holder ={
				type = maester_court_position
				save_scope_as = advisor
			}
		}
		else_if = {
			limit = {
				any_councillor = {
					exists = yes
				}
			}
			random_councillor = {
				save_scope_as = advisor
			}
		}
		else = {
			root = {
				save_scope_as = advisor
			}
		}
		every_artifact = {
			limit = {
				has_variable = valyrian_steel
			}
			root = {
				add_to_variable_list = {
					name = possible_valyrian_steel
					target = prev
				}
			}
		}
	}

	#EDIT: Event integrated into a multi-choice decision
	#Option to loop back to other options
	option = {
		name = global_events_settings.main_screen
		trigger_event = global_events_settings.0001
		clear_variable_list = possible_valyrian_steel
	}

	# Coo thanks
	option = {
		name = agot_valyrian_steel.9999.a
		clear_variable_list = possible_valyrian_steel
	}
}
